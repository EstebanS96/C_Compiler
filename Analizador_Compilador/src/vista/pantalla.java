/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import analizador_compilador.Analizador;
import analizador_compilador.Error_Semantico;
import analizador_compilador.Error_Sintactico;
import analizador_compilador.Lista_Tokens;
import analizador_compilador.Simbolo;
import analizador_compilador.Token_Encontrado;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author jonat
 */
public class pantalla extends javax.swing.JFrame {

    /**
     * Creates new form pantalla
     */
    private final Analizador analizador;
    private final JFileChooser selector = new JFileChooser();
    private final DefaultTableModel mtL;
    private final DefaultTableModel mtS;
    private final DefaultTableModel mtSi;
    private final DefaultTableModel mtSe;
    private File archivo;
    public pantalla() {
        initComponents();
        enabledButton(bAnalizar,false);
        analizador = new Analizador();
        mtL = (DefaultTableModel) tablaL.getModel();
        mtL.setNumRows(0);
        mtS = (DefaultTableModel) TablaS.getModel();
        mtS.setNumRows(0);
        mtSi = (DefaultTableModel) tablaSi.getModel();
        mtSi.setNumRows(0);
        mtSe = (DefaultTableModel) tablaSe.getModel();
        mtSe.setNumRows(0);
        TablaS.setEnabled(false);
        tablaL.setEnabled(false);
        archivo = new File("");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaL = new javax.swing.JTable();
        botones = new javax.swing.JPanel();
        bCargar = new javax.swing.JButton();
        bAnalizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaS = new javax.swing.JTable();
        tituloL = new javax.swing.JLabel();
        tituloS = new javax.swing.JLabel();
        separador = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaSi = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaSe = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Token", "Tipo", "Linea"
            }
        ));
        jScrollPane1.setViewportView(tablaL);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 655, 231));

        bCargar.setText("Seleccionar Archivo");
        bCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCargarActionPerformed(evt);
            }
        });

        bAnalizar.setText("Analizar");
        bAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAnalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout botonesLayout = new javax.swing.GroupLayout(botones);
        botones.setLayout(botonesLayout);
        botonesLayout.setHorizontalGroup(
            botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bCargar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(bAnalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        botonesLayout.setVerticalGroup(
            botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCargar)
                    .addComponent(bAnalizar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(botones, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, 40));

        TablaS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Token", "Linea", "Fila", "Descripcion"
            }
        ));
        jScrollPane2.setViewportView(TablaS);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 368, 650, 263));

        tituloL.setText("Errores Léxicos");
        getContentPane().add(tituloL, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        tituloS.setText("Errores Sintacticos");
        getContentPane().add(tituloS, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 348, -1, -1));
        getContentPane().add(separador, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 332, 1290, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 1290, 10));

        tablaSi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Simbolo", "Nombre", "Tipo", "Scope", "Parametros"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaSi);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 90, 570, 231));

        jLabel1.setText("Tabla de Simbolos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 70, -1, -1));

        tablaSe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Token", "Linea", "Columna", "Descripción"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablaSe);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(747, 368, 570, 263));

        jLabel2.setText("Errores Semanticos");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 350, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAnalizarActionPerformed
        try {
            if(analizador.analizarArchivo()){
                enabledButton(bAnalizar,false);
                cargarTablaE(analizador.getListaTokens());
                cargarTablaS(analizador.getListaErroresS());
                cargarTablaSi(analizador.getTS().getTablaSimbolos());
                cargarTablaSe(analizador.getLista_Semanticos());
                JOptionPane.showMessageDialog(this, "Analisis finalizado");
            }
        } catch (IOException ex) {
            Logger.getLogger(pantalla.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bAnalizarActionPerformed

    private void bCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCargarActionPerformed
        // TODO add your handling code here:
        selector.showDialog(this, "Cargar");
        archivo = selector.getSelectedFile();
        try {
            if(analizador.cargarArchivo(archivo)){
                enabledButton(bAnalizar,true);
                enabledButton(bCargar,false);
                JOptionPane.showMessageDialog(this,"El archivo ha sido cargado con éxito");
            }else{
                JOptionPane.showMessageDialog(this,"Error al cargar el archivo");
            }
        } catch (IOException ex) {
            Logger.getLogger(pantalla.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_bCargarActionPerformed

    private void cargarTablaE(Lista_Tokens lista){
        for(Token_Encontrado t : lista.getLista_encontrados()){
            if(t.getTipo().equals("Error"))
                mtL.addRow(new Object[]{t.getContenido(),t.getTipo(),t.getLineas_aparicion()}); 
        }
    }
    
    private void cargarTablaS(ArrayList<Error_Sintactico> lista_Sintacticos){
        for(Error_Sintactico e: lista_Sintacticos){
            mtS.addRow(new Object[] {e.getLexema(),e.getFila(),e.getColumna(),e.getDescripcion()});
        }
    }
    
    private void cargarTablaSi(ArrayList<Simbolo> tablaSimbolos){

        for(Simbolo s:tablaSimbolos){
            if(s.getTipoSimbolo().equals("Variable")){
               mtSi.addRow(new Object[] {s.getTipoSimbolo(),s.getNombre(),s.getTipo(),s.getScope(),"            -"});
            }
            else{
               System.out.println(s.getParametros().size());
               if(s.getParametros().isEmpty()){
                   mtSi.addRow(new Object[] {s.getTipoSimbolo(),s.getNombre(),s.getTipo(),"           -","            -"});
               }else{
                   mtSi.addRow(new Object[] {s.getTipoSimbolo(),s.getNombre(),s.getTipo(),"           -",separarTipos(s.getParametros())});
               }
            }
        }
    }
    
    private void cargarTablaSe(ArrayList<Error_Semantico> listaSe){
        for(Error_Semantico se: listaSe){
            mtSe.addRow(new Object[] {se.getLexema(),se.getFila(),se.getColumna(),se.getDescripcion()});
        }
    }
    
    private String separarTipos(ArrayList<Simbolo> lista){
        String parametros = "";
        for(Simbolo s:lista){
            parametros = parametros + s.getTipo() + " - ";
        }
        return parametros;
    }
    private void enabledButton(JButton boton, boolean estado){
        boton.setEnabled(estado);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pantalla().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaS;
    private javax.swing.JButton bAnalizar;
    private javax.swing.JButton bCargar;
    private javax.swing.JPanel botones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator separador;
    private javax.swing.JTable tablaL;
    private javax.swing.JTable tablaSe;
    private javax.swing.JTable tablaSi;
    private javax.swing.JLabel tituloL;
    private javax.swing.JLabel tituloS;
    // End of variables declaration//GEN-END:variables
}
